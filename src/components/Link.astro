---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  text: string;
}
const { text, href, ...props } = Astro.props;
---

<a
  class="group flex items-center py-3 nav-link"
  href={href}
  {...props}
  aria-label={`Go to ${text} page`}
>
  <span
    class="nav-indicator mr-4 h-px w-8 bg-slate-600 transition-all group-hover:w-16 group-hover:bg-slate-200 group-focus-visible:w-16 group-focus-visible:bg-slate-200 motion-reduce:transition-none"
  ></span>
  <span
    class="nav-text text-xs font-bold uppercase tracking-widest text-slate-500 group-hover:text-slate-200 group-focus-visible:text-slate-200"
    >{text}</span
  >
</a>

<script>
  // Check for client-side execution
  if (typeof window !== "undefined") {
    // Function to handle link activation
    function activateLink(link) {
      const links = document.querySelectorAll(".nav-link");
      links.forEach((link) => link.classList.remove("active"));
      if (link) link.classList.add("active");
    }

    // Handle click events
    document.addEventListener("click", function (event) {
      const clickedLink = event.target.closest(".nav-link");
      if (clickedLink) {
        activateLink(clickedLink);
      }
    });

    // Handle page load
    window.addEventListener("load", function () {
      const hash = window.location.hash || "#about"; // Default to #about if no hash
      const linkToActivate = document.querySelector(
        `.nav-link[href="${hash}"]`
      );
      activateLink(linkToActivate);
    });

    // Handle scroll events
    document.addEventListener("scroll", function () {
      const sections = document.querySelectorAll("section[data-scroll]");

      sections.forEach((section) => {
        const rect = section.getBoundingClientRect();
        if (rect.top <= 50 && rect.bottom >= 50) {
          const hash = section.getAttribute("data-scroll");
          const linkToActivate = document.querySelector(
            `.nav-link[href="#${hash}"]`
          );
          activateLink(linkToActivate);
        }
      });
    });
  }
</script>

<style>
  a.active span.nav-indicator {
    width: 4rem;
    --tw-bg-opacity: 1;
    background-color: rgb(226 232 240 / var(--tw-bg-opacity));
  }
  a.active span.nav-text {
    --tw-bg-opacity: 1;
    color: rgb(226 232 240 / var(--tw-bg-opacity));
  }
</style>
